// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// cint_fun_J_RNminus
NumericVector cint_fun_J_RNminus(NumericVector x, NumericVector pars, double radian);
RcppExport SEXP _vwmvp_cint_fun_J_RNminus(SEXP xSEXP, SEXP parsSEXP, SEXP radianSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< double >::type radian(radianSEXP);
    rcpp_result_gen = Rcpp::wrap(cint_fun_J_RNminus(x, pars, radian));
    return rcpp_result_gen;
END_RCPP
}
// cint_fun_J_RNplus
NumericVector cint_fun_J_RNplus(NumericVector x, NumericVector pars, double radian);
RcppExport SEXP _vwmvp_cint_fun_J_RNplus(SEXP xSEXP, SEXP parsSEXP, SEXP radianSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< double >::type radian(radianSEXP);
    rcpp_result_gen = Rcpp::wrap(cint_fun_J_RNplus(x, pars, radian));
    return rcpp_result_gen;
END_RCPP
}
// cint_fun_MK_RNminus
NumericVector cint_fun_MK_RNminus(NumericVector x, NumericVector pars, double radian);
RcppExport SEXP _vwmvp_cint_fun_MK_RNminus(SEXP xSEXP, SEXP parsSEXP, SEXP radianSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< double >::type radian(radianSEXP);
    rcpp_result_gen = Rcpp::wrap(cint_fun_MK_RNminus(x, pars, radian));
    return rcpp_result_gen;
END_RCPP
}
// cint_fun_MK_RNplus
NumericVector cint_fun_MK_RNplus(NumericVector x, NumericVector pars, double radian);
RcppExport SEXP _vwmvp_cint_fun_MK_RNplus(SEXP xSEXP, SEXP parsSEXP, SEXP radianSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< double >::type radian(radianSEXP);
    rcpp_result_gen = Rcpp::wrap(cint_fun_MK_RNplus(x, pars, radian));
    return rcpp_result_gen;
END_RCPP
}
// csim_fun_J_RNminus
NumericVector csim_fun_J_RNminus(double x, NumericVector pars, NumericVector baseradians);
RcppExport SEXP _vwmvp_csim_fun_J_RNminus(SEXP xSEXP, SEXP parsSEXP, SEXP baseradiansSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type baseradians(baseradiansSEXP);
    rcpp_result_gen = Rcpp::wrap(csim_fun_J_RNminus(x, pars, baseradians));
    return rcpp_result_gen;
END_RCPP
}
// csim_fun_J_RNplus
NumericVector csim_fun_J_RNplus(double x, NumericVector pars, NumericVector baseradians);
RcppExport SEXP _vwmvp_csim_fun_J_RNplus(SEXP xSEXP, SEXP parsSEXP, SEXP baseradiansSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type baseradians(baseradiansSEXP);
    rcpp_result_gen = Rcpp::wrap(csim_fun_J_RNplus(x, pars, baseradians));
    return rcpp_result_gen;
END_RCPP
}
// csim_fun_MK_RNminus
NumericVector csim_fun_MK_RNminus(double x, NumericVector pars, NumericVector baseradians);
RcppExport SEXP _vwmvp_csim_fun_MK_RNminus(SEXP xSEXP, SEXP parsSEXP, SEXP baseradiansSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type baseradians(baseradiansSEXP);
    rcpp_result_gen = Rcpp::wrap(csim_fun_MK_RNminus(x, pars, baseradians));
    return rcpp_result_gen;
END_RCPP
}
// csim_fun_MK_RNplus
NumericVector csim_fun_MK_RNplus(double x, NumericVector pars, NumericVector baseradians);
RcppExport SEXP _vwmvp_csim_fun_MK_RNplus(SEXP xSEXP, SEXP parsSEXP, SEXP baseradiansSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type baseradians(baseradiansSEXP);
    rcpp_result_gen = Rcpp::wrap(csim_fun_MK_RNplus(x, pars, baseradians));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_vwmvp_cint_fun_J_RNminus", (DL_FUNC) &_vwmvp_cint_fun_J_RNminus, 3},
    {"_vwmvp_cint_fun_J_RNplus", (DL_FUNC) &_vwmvp_cint_fun_J_RNplus, 3},
    {"_vwmvp_cint_fun_MK_RNminus", (DL_FUNC) &_vwmvp_cint_fun_MK_RNminus, 3},
    {"_vwmvp_cint_fun_MK_RNplus", (DL_FUNC) &_vwmvp_cint_fun_MK_RNplus, 3},
    {"_vwmvp_csim_fun_J_RNminus", (DL_FUNC) &_vwmvp_csim_fun_J_RNminus, 3},
    {"_vwmvp_csim_fun_J_RNplus", (DL_FUNC) &_vwmvp_csim_fun_J_RNplus, 3},
    {"_vwmvp_csim_fun_MK_RNminus", (DL_FUNC) &_vwmvp_csim_fun_MK_RNminus, 3},
    {"_vwmvp_csim_fun_MK_RNplus", (DL_FUNC) &_vwmvp_csim_fun_MK_RNplus, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_vwmvp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
